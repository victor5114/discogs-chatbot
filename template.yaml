AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  SAM template for Discogs Bot project

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Parameters:
  SlackSigningSecret:
    Type: String
    Description: Slack Signing secret
    Default: xxx
  DiscogsConsumerKey:
    Type: String
    Description: Discogs Application Consumer Key
    Default: xxx
  DiscogsSecretKey:
    Type: String
    Description: Discogs Application Secret Key
    Default: xxx
  Debug:
    Type: String
    Description: Debug mode
    Default: false
  SNSTopicSearchReleaseARN:
    Type: String
    Description: SNS Topic that triggers search release 
Resources:
  DispatcherFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: lambdas/discogs-bot-dispatcher
      Handler: app.lambda_handler
      Runtime: python3.8
      Environment:
        Variables:
          SLACK_SIGNING_SECRET: !Ref SlackSigningSecret
          DISCOGS_CONSUMER_KEY: !Ref DiscogsConsumerKey
          DISCOGS_SECRET_KEY: !Ref DiscogsSecretKey
          DEBUG: !Ref Debug
          SNS_TOPIC_SEARCH_RELEASE: !Ref SNSTopicSearchReleaseARN
      Events:
        Dispatcher:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /dispatch
            Method: post
  SearchReleaseFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: lambdas/discogs-bot-search-release
      Handler: app.lambda_handler
      Runtime: python3.8
      Environment:
        Variables:
          SLACK_SIGNING_SECRET: !Ref SlackSigningSecret
          DISCOGS_CONSUMER_KEY: !Ref DiscogsConsumerKey
          DISCOGS_SECRET_KEY: !Ref DiscogsSecretKey
          DEBUG: !Ref Debug
      Events:
        SNSTopicSearchRelease:
          Type: SNS # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            FilterPolicy: null
            Region: eu-west-3
            SqsSubscription: false
            Topic: !Ref SNSTopicSearchReleaseARN
  SlackOAuthRedirectFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: lambdas/discogs-bot-slack-oauth
      Handler: app.lambda_handler
      Runtime: python3.8
      Environment:
        Variables:
          DEBUG: !Ref Debug
      Events:
        Dispatcher:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /oauth
            Method: post
Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  DispatcherdApi:
    Description: "API Gateway endpoint URL for Prod stage for Dispatcher function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/dispatch/"
  DispatcherFunction:
    Description: "Dispatcher Lambda Function ARN"
    Value: !GetAtt DispatcherFunction.Arn
  DispatcherFunctionIamRole:
    Description: "Implicit IAM Role created for Dispatcher function"
    Value: !GetAtt DispatcherFunctionRole.Arn
